import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

'use client';

import { useState, useEffect } from 'react';
import { AuthProvider, useAuth } from '../contexts/AuthContext';
import { Sidebar } from '../components/Sidebar';
import { TodoList } from '../types';
import { db } from '../utils/db';

function AppContent({ children }: { children: React.ReactNode }) {
  const { user } = useAuth();
  const [lists, setLists] = useState<TodoList[]>([]);

  useEffect(() => {
    if (!user) return;

    const loadLists = async () => {
      try {
        const userLists = await db.getLists(user.id);
        setLists(userLists);
      } catch (error) {
        console.error('Error loading lists:', error);
      }
    };

    loadLists();
  }, [user]);

  const handleCreateList = async () => {
    if (!user) return;

    const name = prompt('Enter list name:');
    if (!name) return;

    try {
      await db.createList({
        user_id: user.id,
        name: name.trim()
      });
    } catch (error) {
      console.error('Error creating list:', error);
    }
  };

  return (
    <div className="flex h-screen bg-gray-100">
      {user && <Sidebar lists={lists} onCreateList={handleCreateList} />}
      <main className="flex-1 overflow-hidden">{children}</main>
    </div>
  );
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <AuthProvider>
          <AppContent>{children}</AppContent>
        </AuthProvider>
      </body>
    </html>
  );
}
